// Generated by CoffeeScript 1.10.0
(function() {
  var BaseModel, Merge_requests,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseModel = require('../BaseModel');

  Merge_requests = (function(superClass) {
    extend(Merge_requests, superClass);

    function Merge_requests() {
      this.list_2 = bind(this.list_2, this);
      this.refuse = bind(this.refuse, this);
      this.merge = bind(this.merge, this);
      this.cancel = bind(this.cancel, this);
      this.show_2 = bind(this.show_2, this);
      this.do_create = bind(this.do_create, this);
      this.init = bind(this.init, this);
      return Merge_requests.__super__.constructor.apply(this, arguments);
    }

    Merge_requests.prototype.init = function() {
      this.debug("init()");
      this.program.command("do_create").description("创建 MergeRequest")["arguments"]('<user> <project>').action(this.do_create);
      this.program.command("show_2").description("显示某个 MergeRequest")["arguments"]('<user> <project> <iid>').action(this.show_2);
      this.program.command("cancel").description("取消 MergeRequest")["arguments"]('<user> <project> <iid>').action(this.cancel);
      this.program.command("merge").description("合并某个 MergeRequest")["arguments"]('<user> <project> <iid>').action(this.merge);
      this.program.command("refuse").description("拒绝某个 MergeRequest")["arguments"]('<user> <project> <iid>').action(this.refuse);
      return this.program.command("list_2").description("MergeRequest 列表")["arguments"]('<user> <project> <status>').action(this.list_2);
    };


    /*
    
     operationId  : do_create
     description  : 创建 MergeRequest
     args     	: user,project
     params 		: srcBranch,desBranch,title,content,reviewers,tasks,srcBranch,desBranch,title,content,reviewers,tasks,
     */

    Merge_requests.prototype.do_create = function(user, project) {
      this.debug("do_create()");
      return this.coding.mergeRequests.do_create(user, project, params, function(data) {
        return console.log(data);
      });
    };


    /*
    
     operationId  : show_2
     description  : 显示某个 MergeRequest
     args     	: user,project,iid
     params 		: diff,diff,
     */

    Merge_requests.prototype.show_2 = function(user, project, iid) {
      this.debug("show_2()");
      return this.coding.mergeRequests.show_2(user, project, iid, params, function(data) {
        return console.log(data);
      });
    };


    /*
    
     operationId  : cancel
     description  : 取消 MergeRequest
     args     	: user,project,iid
     params 		:
     */

    Merge_requests.prototype.cancel = function(user, project, iid) {
      this.debug("cancel()");
      return this.coding.mergeRequests.cancel(user, project, iid, params, function(data) {
        return console.log(data);
      });
    };


    /*
    
     operationId  : merge
     description  : 合并某个 MergeRequest
     args     	: user,project,iid
     params 		: message,del_source_branch,message,del_source_branch,
     */

    Merge_requests.prototype.merge = function(user, project, iid) {
      this.debug("merge()");
      return this.coding.mergeRequests.merge(user, project, iid, params, function(data) {
        return console.log(data);
      });
    };


    /*
    
     operationId  : refuse
     description  : 拒绝某个 MergeRequest
     args     	: user,project,iid
     params 		:
     */

    Merge_requests.prototype.refuse = function(user, project, iid) {
      this.debug("refuse()");
      return this.coding.mergeRequests.refuse(user, project, iid, params, function(data) {
        return console.log(data);
      });
    };


    /*
    
     operationId  : list_2
     description  : MergeRequest 列表
     args     	: user,project,status
     params 		: page,pageSize,page,pageSize,
     */

    Merge_requests.prototype.list_2 = function(user, project, status) {
      this.debug("list_2()");
      return this.coding.mergeRequests.list_2(user, project, status, params, function(data) {
        return console.log(data);
      });
    };

    return Merge_requests;

  })(BaseModel);

  module.exports = function(cmd) {
    return new Merge_requests(cmd);
  };

}).call(this);
