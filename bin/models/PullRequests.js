// Generated by CoffeeScript 1.10.0
(function() {
  var BaseModel, PullRequests,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseModel = require('../BaseModel');

  PullRequests = (function(superClass) {
    extend(PullRequests, superClass);

    function PullRequests() {
      this.list = bind(this.list, this);
      this.refuse = bind(this.refuse, this);
      this.merge = bind(this.merge, this);
      this.commits = bind(this.commits, this);
      this.comments = bind(this.comments, this);
      this.cancle = bind(this.cancle, this);
      this.get = bind(this.get, this);
      this.create = bind(this.create, this);
      this.init = bind(this.init, this);
      return PullRequests.__super__.constructor.apply(this, arguments);
    }

    PullRequests.prototype.init = function() {
      this.debug("init()");
      this.program.command("create").description("创建 PullRequest")["arguments"]("<user> <project>").action(this.create);
      this.program.command("get").description("获取某个 PullRequest")["arguments"]("<user> <project> <iid>").action(this.get);
      this.program.command("cancle").description("取消 PullRequest")["arguments"]("<user> <project> <iid>").action(this.cancle);
      this.program.command("comments").description("PullRequest 评论列表")["arguments"]("<user> <project> <iid>").action(this.comments);
      this.program.command("commits").description("获取某个 PullRequest 的评论")["arguments"]("<user> <project> <iid>").action(this.commits);
      this.program.command("merge").description("合并 PullRequest")["arguments"]("<user> <project> <iid>").action(this.merge);
      this.program.command("refuse").description("拒绝 PullRequest")["arguments"]("<user> <project> <iid>").action(this.refuse);
      return this.program.command("list").description("PullRequest 列表")["arguments"]("<user> <project> <status>").action(this.list);
    };


    /*
    
     method            : get
     summary         : create
     description    : 创建 PullRequest
     path            : user,project
     query            : src_branch,des_user_name,des_project_name,des_branch,diff
     */

    PullRequests.prototype.create = function(user, project) {
      this.debug("PullRequests::create()");
      return this.prompt.get([
        {
          "name": "src_branch",
          "description": "Enter src_branch",
          "type": "string",
          "required": false
        }, {
          "name": "des_user_name",
          "description": "Enter des_user_name",
          "type": "string",
          "required": false
        }, {
          "name": "des_project_name",
          "description": "Enter des_project_name",
          "type": "string",
          "required": false
        }, {
          "name": "des_branch",
          "description": "Enter des_branch",
          "type": "string",
          "required": false
        }, {
          "name": "diff",
          "description": "Enter diff",
          "type": "string",
          "required": false
        }
      ], (function(_this) {
        return function(err, params) {
          if (err) {
            return err;
          }
          return _this.coding.pullRequest.create(user, project, params, function(data) {
            return _this.showData(data);
          });
        };
      })(this));
    };


    /*
    
     method            : get
     summary         : get
     description    : 获取某个 PullRequest
     path            : user,project,iid
     query            : diff
     */

    PullRequests.prototype.get = function(user, project, iid) {
      this.debug("PullRequests::get()");
      return this.prompt.get([
        {
          "name": "diff",
          "description": "Enter diff",
          "type": "string",
          "required": false
        }
      ], (function(_this) {
        return function(err, params) {
          if (err) {
            return err;
          }
          return _this.coding.pullRequest.get(user, project, iid, params, function(data) {
            return _this.showData(data);
          });
        };
      })(this));
    };


    /*
    
     method            : post
     summary         : cancle
     description    : 取消 PullRequest
     path            : user,project,iid
     */

    PullRequests.prototype.cancle = function(user, project, iid) {
      this.debug("PullRequests::cancle()");
      return this.coding.pullRequest.cancle(user, project, iid, (function(_this) {
        return function(data) {
          return _this.showData(data);
        };
      })(this));
    };


    /*
    
     method            : get
     summary         : comments
     description    : PullRequest 评论列表
     path            : user,project,iid
     */

    PullRequests.prototype.comments = function(user, project, iid) {
      this.debug("PullRequests::comments()");
      return this.coding.pullRequest.comments(user, project, iid, (function(_this) {
        return function(data) {
          return _this.showData(data);
        };
      })(this));
    };


    /*
    
     method            : get
     summary         : commits
     description    : 获取某个 PullRequest 的评论
     path            : user,project,iid
     */

    PullRequests.prototype.commits = function(user, project, iid) {
      this.debug("PullRequests::commits()");
      return this.coding.pullRequest.commits(user, project, iid, (function(_this) {
        return function(data) {
          return _this.showData(data);
        };
      })(this));
    };


    /*
    
     method            : post
     summary         : merge
     description    : 合并 PullRequest
     path            : user,project,iid
     query            : message
     */

    PullRequests.prototype.merge = function(user, project, iid) {
      this.debug("PullRequests::merge()");
      return this.prompt.get([
        {
          "name": "message",
          "description": "Enter message",
          "type": "string",
          "required": false
        }
      ], (function(_this) {
        return function(err, params) {
          if (err) {
            return err;
          }
          return _this.coding.pullRequest.merge(user, project, iid, params, function(data) {
            return _this.showData(data);
          });
        };
      })(this));
    };


    /*
    
     method            : post
     summary         : refuse
     description    : 拒绝 PullRequest
     path            : user,project,iid
     */

    PullRequests.prototype.refuse = function(user, project, iid) {
      this.debug("PullRequests::refuse()");
      return this.coding.pullRequest.refuse(user, project, iid, (function(_this) {
        return function(data) {
          return _this.showData(data);
        };
      })(this));
    };


    /*
    
     method            : get
     summary         : list
     description    : PullRequest 列表
     path            : user,project,status
     query            : page,pageSize
     */

    PullRequests.prototype.list = function(user, project, status) {
      this.debug("PullRequests::list()");
      return this.prompt.get([
        {
          "name": "page",
          "description": "Enter page",
          "type": "integer",
          "required": false
        }, {
          "name": "pageSize",
          "description": "Enter pageSize",
          "type": "integer",
          "required": false
        }
      ], (function(_this) {
        return function(err, params) {
          if (err) {
            return err;
          }
          return _this.coding.pullRequest.list(user, project, status, params, function(data) {
            return _this.showData(data);
          });
        };
      })(this));
    };

    return PullRequests;

  })(BaseModel);

  module.exports = function(cmd) {
    return new PullRequests(cmd);
  };

}).call(this);
