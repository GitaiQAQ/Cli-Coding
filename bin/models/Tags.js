// Generated by CoffeeScript 1.10.0
(function() {
  var BaseModel, Tags,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseModel = require('../BaseModel');

  Tags = (function(superClass) {
    extend(Tags, superClass);

    function Tags() {
      this.deleteTag = bind(this.deleteTag, this);
      this.createTag = bind(this.createTag, this);
      this.list_4 = bind(this.list_4, this);
      this.init = bind(this.init, this);
      return Tags.__super__.constructor.apply(this, arguments);
    }

    Tags.prototype.init = function() {
      this.debug("init()");
      this.program.command("list_4").description("标签列表")["arguments"]('<user> <project>').action(this.list_4);
      this.program.command("createTag").description("创建标签")["arguments"]('<user> <project>').action(this.createTag);
      return this.program.command("deleteTag").description("删除标签")["arguments"]('<user> <project>').action(this.deleteTag);
    };


    /*
    
     operationId  : list_4
     description  : 标签列表
     args     	: user,project
     params 		: page,pageSize,page,pageSize,
     */

    Tags.prototype.list_4 = function(user, project) {
      this.debug("list_4()");
      return this.coding.tags.list_4(user, project, params, function(data) {
        return console.log(data);
      });
    };


    /*
    
     operationId  : createTag
     description  : 创建标签
     args     	: user,project
     params 		: tag_name,tag_point,message,tag_name,tag_point,message,
     */

    Tags.prototype.createTag = function(user, project) {
      this.debug("createTag()");
      return this.coding.tags.createTag(user, project, params, function(data) {
        return console.log(data);
      });
    };


    /*
    
     operationId  : deleteTag
     description  : 删除标签
     args     	: user,project
     params 		: tag_name,tag_name,
     */

    Tags.prototype.deleteTag = function(user, project) {
      this.debug("deleteTag()");
      return this.coding.tags.deleteTag(user, project, params, function(data) {
        return console.log(data);
      });
    };

    return Tags;

  })(BaseModel);

  module.exports = function(cmd) {
    return new Tags(cmd);
  };

}).call(this);
