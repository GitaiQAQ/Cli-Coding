// Generated by CoffeeScript 1.10.0
(function() {
  var BaseModel, Tweets,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseModel = require('../BaseModel');

  Tweets = (function(superClass) {
    extend(Tweets, superClass);

    function Tweets() {
      this.publicTweets = bind(this.publicTweets, this);
      this.unlike = bind(this.unlike, this);
      this.likeTweetList = bind(this.likeTweetList, this);
      this.like = bind(this.like, this);
      this.del = bind(this.del, this);
      this.comment = bind(this.comment, this);
      this.comment = bind(this.comment, this);
      this.comment = bind(this.comment, this);
      this.detail = bind(this.detail, this);
      this.userPublic = bind(this.userPublic, this);
      this.list = bind(this.list, this);
      this.lastTweetList = bind(this.lastTweetList, this);
      this.image = bind(this.image, this);
      this.comment = bind(this.comment, this);
      this.bestUser = bind(this.bestUser, this);
      this.create = bind(this.create, this);
      this.init = bind(this.init, this);
      return Tweets.__super__.constructor.apply(this, arguments);
    }

    Tweets.prototype.init = function() {
      this.debug("init()");
      this.program.command("create").description("发送冒泡").action(this.create);
      this.program.command("bestUser").description("热门用户").action(this.bestUser);
      this.program.command("comment").description("获取某个评论")["arguments"]("<id>").action(this.comment);
      this.program.command("image").description("冒泡插入图片").action(this.image);
      this.program.command("lastTweetList").description("查询last_id以后的最新冒泡").action(this.lastTweetList);
      this.program.command("list").description("冒泡列表").action(this.list);
      this.program.command("userPublic").description("用户冒泡列表").action(this.userPublic);
      this.program.command("detail").description("获取冒泡详情")["arguments"]("<user> <tweet_id>").action(this.detail);
      this.program.command("comment").description("冒泡评论")["arguments"]("<id>").action(this.comment);
      this.program.command("comment").description("删除冒泡评论")["arguments"]("<id> <comment_id>").action(this.comment);
      this.program.command("comment").description("获取冒泡评论列表")["arguments"]("<id>").action(this.comment);
      this.program.command("del").description("删除冒泡")["arguments"]("<tweet_id>").action(this.del);
      this.program.command("like").description("冒泡点赞")["arguments"]("<tweet_id>").action(this.like);
      this.program.command("likeTweetList").description("赞过的冒泡列表")["arguments"]("<tweet_id>").action(this.likeTweetList);
      this.program.command("unlike").description("冒泡取消点赞")["arguments"]("<tweet_id>").action(this.unlike);
      return this.program.command("publicTweets").description("冒泡广场列表").action(this.publicTweets);
    };


    /*
    
     method            : post
     summary         : create
     description    : 发送冒泡
     query            : device,location,coord,address,content
     */

    Tweets.prototype.create = function() {
      this.debug("Tweets::create()");
      return this.prompt.get([
        {
          "name": "device",
          "description": "Enter device",
          "type": "string",
          "required": false
        }, {
          "name": "location",
          "description": "Enter location",
          "type": "string",
          "required": false
        }, {
          "name": "coord",
          "description": "Enter coord",
          "type": "string",
          "required": false
        }, {
          "name": "address",
          "description": "Enter address",
          "type": "string",
          "required": false
        }, {
          "name": "content",
          "description": "Enter content",
          "type": "string",
          "required": false
        }
      ], (function(_this) {
        return function(err, params) {
          if (err) {
            return err;
          }
          return _this.coding.tweet.create(params, function(data) {
            return _this.showData(data);
          });
        };
      })(this));
    };


    /*
    
     method            : get
     summary         : bestUser
     description    : 热门用户
     */

    Tweets.prototype.bestUser = function() {
      this.debug("Tweets::bestUser()");
      return this.coding.tweet.bestUser((function(_this) {
        return function(data) {
          return _this.showData(data);
        };
      })(this));
    };


    /*
    
     method            : get
     summary         : comment
     description    : 获取某个评论
     path            : id
     */

    Tweets.prototype.comment = function(id) {
      this.debug("Tweets::comment()");
      return this.coding.tweet.comment(id, (function(_this) {
        return function(data) {
          return _this.showData(data);
        };
      })(this));
    };


    /*
    
     method            : post
     summary         : image
     description    : 冒泡插入图片
     */

    Tweets.prototype.image = function() {
      this.debug("Tweets::image()");
      return this.coding.tweet.image((function(_this) {
        return function(data) {
          return _this.showData(data);
        };
      })(this));
    };


    /*
    
     method            : get
     summary         : lastTweetList
     description    : 查询last_id以后的最新冒泡
     query            : default_like_count,last_id
     */

    Tweets.prototype.lastTweetList = function() {
      this.debug("Tweets::lastTweetList()");
      return this.prompt.get([
        {
          "name": "default_like_count",
          "description": "Enter default_like_count",
          "type": "integer",
          "required": false
        }, {
          "name": "last_id",
          "description": "Enter last_id",
          "type": "integer",
          "required": true
        }
      ], (function(_this) {
        return function(err, params) {
          if (err) {
            return err;
          }
          return _this.coding.tweet.lastTweetList(params, function(data) {
            return _this.showData(data);
          });
        };
      })(this));
    };


    /*
    
     method            : get
     summary         : list
     description    : 冒泡列表
     query            : sort,last_id,default_like_count,filter
     */

    Tweets.prototype.list = function() {
      this.debug("Tweets::list()");
      return this.prompt.get([
        {
          "name": "sort",
          "description": "Enter sort",
          "type": "string",
          "required": false
        }, {
          "name": "last_id",
          "description": "Enter last_id",
          "type": "integer",
          "required": false
        }, {
          "name": "default_like_count",
          "description": "Enter default_like_count",
          "type": "integer",
          "required": false
        }, {
          "name": "filter",
          "description": "Enter filter",
          "type": "boolean",
          "required": false
        }
      ], (function(_this) {
        return function(err, params) {
          if (err) {
            return err;
          }
          return _this.coding.tweet.list(params, function(data) {
            return _this.showData(data);
          });
        };
      })(this));
    };


    /*
    
     method            : get
     summary         : userPublic
     description    : 用户冒泡列表
     query            : last_id,user_id,user,type,default_like_count
     */

    Tweets.prototype.userPublic = function() {
      this.debug("Tweets::userPublic()");
      return this.prompt.get([
        {
          "name": "last_id",
          "description": "Enter last_id",
          "type": "integer",
          "required": false
        }, {
          "name": "user_id",
          "description": "Enter user_id",
          "type": "integer",
          "required": false
        }, {
          "name": "user",
          "description": "Enter user",
          "type": "string",
          "required": false
        }, {
          "name": "type",
          "description": "Enter type",
          "type": "string",
          "required": false
        }, {
          "name": "default_like_count",
          "description": "Enter default_like_count",
          "type": "integer",
          "required": false
        }
      ], (function(_this) {
        return function(err, params) {
          if (err) {
            return err;
          }
          return _this.coding.tweet.userPublic(params, function(data) {
            return _this.showData(data);
          });
        };
      })(this));
    };


    /*
    
     method            : get
     summary         : detail
     description    : 获取冒泡详情
     path            : user,tweet_id
     query            : default_like_count
     */

    Tweets.prototype.detail = function(user, tweet_id) {
      this.debug("Tweets::detail()");
      return this.prompt.get([
        {
          "name": "default_like_count",
          "description": "Enter default_like_count",
          "type": "integer",
          "required": false
        }
      ], (function(_this) {
        return function(err, params) {
          if (err) {
            return err;
          }
          return _this.coding.tweet.detail(user, tweet_id, params, function(data) {
            return _this.showData(data);
          });
        };
      })(this));
    };


    /*
    
     method            : post
     summary         : comment
     description    : 冒泡评论
     path            : id
     query            : content,afterFilter
     */

    Tweets.prototype.comment = function(id) {
      this.debug("Tweets::comment()");
      return this.prompt.get([
        {
          "name": "content",
          "description": "Enter content",
          "type": "string",
          "required": false
        }, {
          "name": "afterFilter",
          "description": "Enter afterFilter",
          "type": "string",
          "required": false
        }
      ], (function(_this) {
        return function(err, params) {
          if (err) {
            return err;
          }
          return _this.coding.tweet.comment(id, params, function(data) {
            return _this.showData(data);
          });
        };
      })(this));
    };


    /*
    
     method            : delete
     summary         : comment
     description    : 删除冒泡评论
     path            : id,comment_id
     */

    Tweets.prototype.comment = function(id, comment_id) {
      this.debug("Tweets::comment()");
      return this.coding.tweet.comment(id, comment_id, (function(_this) {
        return function(data) {
          return _this.showData(data);
        };
      })(this));
    };


    /*
    
     method            : get
     summary         : comment
     description    : 获取冒泡评论列表
     path            : id
     query            : page,pageSize
     */

    Tweets.prototype.comment = function(id) {
      this.debug("Tweets::comment()");
      return this.prompt.get([
        {
          "name": "page",
          "description": "Enter page",
          "type": "integer",
          "required": false
        }, {
          "name": "pageSize",
          "description": "Enter pageSize",
          "type": "integer",
          "required": false
        }
      ], (function(_this) {
        return function(err, params) {
          if (err) {
            return err;
          }
          return _this.coding.tweet.comment(id, params, function(data) {
            return _this.showData(data);
          });
        };
      })(this));
    };


    /*
    
     method            : delete
     summary         : del
     description    : 删除冒泡
     path            : tweet_id
     */

    Tweets.prototype.del = function(tweet_id) {
      this.debug("Tweets::del()");
      return this.coding.tweet.del(tweet_id, (function(_this) {
        return function(data) {
          return _this.showData(data);
        };
      })(this));
    };


    /*
    
     method            : post
     summary         : like
     description    : 冒泡点赞
     path            : tweet_id
     */

    Tweets.prototype.like = function(tweet_id) {
      this.debug("Tweets::like()");
      return this.coding.tweet.like(tweet_id, (function(_this) {
        return function(data) {
          return _this.showData(data);
        };
      })(this));
    };


    /*
    
     method            : get
     summary         : likeTweetList
     description    : 赞过的冒泡列表
     path            : tweet_id
     query            : page,pageSize
     */

    Tweets.prototype.likeTweetList = function(tweet_id) {
      this.debug("Tweets::likeTweetList()");
      return this.prompt.get([
        {
          "name": "page",
          "description": "Enter page",
          "type": "integer",
          "required": false
        }, {
          "name": "pageSize",
          "description": "Enter pageSize",
          "type": "integer",
          "required": false
        }
      ], (function(_this) {
        return function(err, params) {
          if (err) {
            return err;
          }
          return _this.coding.tweet.likeTweetList(tweet_id, params, function(data) {
            return _this.showData(data);
          });
        };
      })(this));
    };


    /*
    
     method            : post
     summary         : unlike
     description    : 冒泡取消点赞
     path            : tweet_id
     */

    Tweets.prototype.unlike = function(tweet_id) {
      this.debug("Tweets::unlike()");
      return this.coding.tweet.unlike(tweet_id, (function(_this) {
        return function(data) {
          return _this.showData(data);
        };
      })(this));
    };


    /*
    
     method            : get
     summary         : publicTweets
     description    : 冒泡广场列表
     query            : sort,last_id,default_like_count,filter
     */

    Tweets.prototype.publicTweets = function() {
      this.debug("Tweets::publicTweets()");
      return this.prompt.get([
        {
          "name": "sort",
          "description": "Enter sort",
          "type": "string",
          "required": false
        }, {
          "name": "last_id",
          "description": "Enter last_id",
          "type": "integer",
          "required": false
        }, {
          "name": "default_like_count",
          "description": "Enter default_like_count",
          "type": "integer",
          "required": false
        }, {
          "name": "filter",
          "description": "Enter filter",
          "type": "boolean",
          "required": false
        }
      ], (function(_this) {
        return function(err, params) {
          if (err) {
            return err;
          }
          return _this.coding.tweet.publicTweets(params, function(data) {
            return _this.showData(data);
          });
        };
      })(this));
    };

    return Tweets;

  })(BaseModel);

  module.exports = function(cmd) {
    return new Tweets(cmd);
  };

}).call(this);
