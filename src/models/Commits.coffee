
# Generated by gitai 0.1.2

BaseModel = require '../BaseModel'

class Commits extends BaseModel
  init:=>
    @debug "init()"

    @program.command "show"
      .description "commit 列表"
      .arguments "<user> <project> <commit>"
      .action @show



  ###

   method            : get
   summary         : show
   description    : commit 列表
   header         : userAgent,accept
   path            : user,project,commit
   query            : diff,w
   body            : currentApp,ref

  ###

  show: (user,project,commit) =>
    @debug "Commits::show()"

    @prompt.get [{"name":"userAgent","description":"Enter userAgent","type":"string","required":false},{"name":"accept","description":"Enter accept","type":"string","required":false},{"name":"diff","description":"Enter diff","type":"string","required":false},{"name":"w","description":"Enter w","type":"string","required":false},{"name":"currentApp","description":"Enter currentApp","type":"string","required":false},{"name":"ref","description":"Enter ref","type":"string","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,["userAgent","accept"],["diff","w"],["currentApp","ref"],[]
      @coding.commit.show user,project,commit,params,(data) =>
        @showData data


module.exports = (cmd) -> new Commits cmd