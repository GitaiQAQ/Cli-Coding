
# Generated by gitai 0.1.2

BaseModel = require '../BaseModel'

class Depots extends BaseModel
  init:=>
    @debug "init()"

    @program.command "get"
      .description "获取仓库信息"
      .arguments "<user> <project>"
      .action @get

    @program.command "fork"
      .description "fork"
      .arguments "<user> <project>"
      .action @fork

    @program.command "forkList"
      .description "项目被fork的列表"
      .arguments "<user> <project>"
      .action @forkList

    @program.command "createWebhook"
      .description "创建 webhook"
      .arguments "<user> <project>"
      .action @createWebhook

    @program.command "getWebhook"
      .description "获取 webhook"
      .arguments "<user> <project> <id>"
      .action @getWebhook

    @program.command "updateWebhook"
      .description "编辑 webhook"
      .arguments "<user> <project> <id>"
      .action @updateWebhook

    @program.command "deleteWebhook"
      .description "删除 webhook"
      .arguments "<user> <project> <id>"
      .action @deleteWebhook

    @program.command "list"
      .description "列出项目设置的 webhook"
      .arguments "<user> <project>"
      .action @list

    @program.command "importRepo"
      .description "导入仓库"
      .arguments "<user> <project>"
      .action @importRepo

    @program.command "importRepo"
      .description "导入仓库"
      .arguments "<user> <project>"
      .action @importRepo

    @program.command "initDepot"
      .description "初始化仓库"
      .arguments "<user> <project>"
      .action @initDepot



  ###

   method            : get
   summary         : get
   description    : 获取仓库信息
   path            : user,project

  ###

  get: (user,project) =>
    @debug "Depots::get()"

    @coding.depot.get user,project,(data) =>
      @showData data

  ###

   method            : post
   summary         : fork
   description    : fork
   path            : user,project

  ###

  fork: (user,project) =>
    @debug "Depots::fork()"

    @coding.depot.fork user,project,(data) =>
      @showData data

  ###

   method            : get
   summary         : forkList
   description    : 项目被fork的列表
   path            : user,project

  ###

  forkList: (user,project) =>
    @debug "Depots::forkList()"

    @coding.depot.forkList user,project,(data) =>
      @showData data

  ###

   method            : post
   summary         : createWebhook
   description    : 创建 webhook
   path            : user,project
   query            : hook_url,token,type_push,type_mr_pr,type_topic,type_member,type_comment,type_document,type_watch,type_star,type_task

  ###

  createWebhook: (user,project) =>
    @debug "Depots::createWebhook()"

    @prompt.get [{"name":"hook_url","description":"Enter hook_url","type":"string","required":false},{"name":"token","description":"Enter token","type":"string","required":false},{"name":"type_push","description":"Enter type_push","type":"boolean","required":false},{"name":"type_mr_pr","description":"Enter type_mr_pr","type":"boolean","required":false},{"name":"type_topic","description":"Enter type_topic","type":"boolean","required":false},{"name":"type_member","description":"Enter type_member","type":"boolean","required":false},{"name":"type_comment","description":"Enter type_comment","type":"boolean","required":false},{"name":"type_document","description":"Enter type_document","type":"boolean","required":false},{"name":"type_watch","description":"Enter type_watch","type":"boolean","required":false},{"name":"type_star","description":"Enter type_star","type":"boolean","required":false},{"name":"type_task","description":"Enter type_task","type":"boolean","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["hook_url","token","type_push","type_mr_pr","type_topic","type_member","type_comment","type_document","type_watch","type_star","type_task"],[],[]
      @coding.depot.createWebhook user,project,params,(data) =>
        @showData data

  ###

   method            : get
   summary         : getWebhook
   description    : 获取 webhook
   path            : user,project,id

  ###

  getWebhook: (user,project,id) =>
    @debug "Depots::getWebhook()"

    @coding.depot.getWebhook user,project,id,(data) =>
      @showData data

  ###

   method            : put
   summary         : updateWebhook
   description    : 编辑 webhook
   path            : user,project,id
   query            : hook_url,token,type_push,type_mr_pr,type_topic,type_member,type_comment,type_document,type_watch,type_star,type_task

  ###

  updateWebhook: (user,project,id) =>
    @debug "Depots::updateWebhook()"

    @prompt.get [{"name":"hook_url","description":"Enter hook_url","type":"string","required":false},{"name":"token","description":"Enter token","type":"string","required":false},{"name":"type_push","description":"Enter type_push","type":"boolean","required":false},{"name":"type_mr_pr","description":"Enter type_mr_pr","type":"boolean","required":false},{"name":"type_topic","description":"Enter type_topic","type":"boolean","required":false},{"name":"type_member","description":"Enter type_member","type":"boolean","required":false},{"name":"type_comment","description":"Enter type_comment","type":"boolean","required":false},{"name":"type_document","description":"Enter type_document","type":"boolean","required":false},{"name":"type_watch","description":"Enter type_watch","type":"boolean","required":false},{"name":"type_star","description":"Enter type_star","type":"boolean","required":false},{"name":"type_task","description":"Enter type_task","type":"boolean","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["hook_url","token","type_push","type_mr_pr","type_topic","type_member","type_comment","type_document","type_watch","type_star","type_task"],[],[]
      @coding.depot.updateWebhook user,project,id,params,(data) =>
        @showData data

  ###

   method            : delete
   summary         : deleteWebhook
   description    : 删除 webhook
   path            : user,project,id

  ###

  deleteWebhook: (user,project,id) =>
    @debug "Depots::deleteWebhook()"

    @coding.depot.deleteWebhook user,project,id,(data) =>
      @showData data

  ###

   method            : get
   summary         : list
   description    : 列出项目设置的 webhook
   path            : user,project

  ###

  list: (user,project) =>
    @debug "Depots::list()"

    @coding.depot.list user,project,(data) =>
      @showData data

  ###

   method            : get
   summary         : importRepo
   description    : 导入仓库
   path            : user,project
   query            : origin_url,vcs_type

  ###

  importRepo: (user,project) =>
    @debug "Depots::importRepo()"

    @prompt.get [{"name":"origin_url","description":"Enter origin_url","type":"string","required":true},{"name":"vcs_type","description":"Enter vcs_type","type":"string","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["origin_url","vcs_type"],[],[]
      @coding.depot.importRepo user,project,params,(data) =>
        @showData data

  ###

   method            : post
   summary         : importRepo
   description    : 导入仓库
   path            : user,project
   query            : origin_url,vcs_type

  ###

  importRepo: (user,project) =>
    @debug "Depots::importRepo()"

    @prompt.get [{"name":"origin_url","description":"Enter origin_url","type":"string","required":true},{"name":"vcs_type","description":"Enter vcs_type","type":"string","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["origin_url","vcs_type"],[],[]
      @coding.depot.importRepo user,project,params,(data) =>
        @showData data

  ###

   method            : post
   summary         : initDepot
   description    : 初始化仓库
   path            : user,project
   query            : type,gitReadmeEnabled,gitIgnore,gitLicense,importFrom,vcsType

  ###

  initDepot: (user,project) =>
    @debug "Depots::initDepot()"

    @prompt.get [{"name":"type","description":"Enter type","type":"string","required":false},{"name":"gitReadmeEnabled","description":"Enter gitReadmeEnabled","type":"string","required":false},{"name":"gitIgnore","description":"Enter gitIgnore","type":"string","required":false},{"name":"gitLicense","description":"Enter gitLicense","type":"string","required":false},{"name":"importFrom","description":"Enter importFrom","type":"string","required":false},{"name":"vcsType","description":"Enter vcsType","type":"string","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["type","gitReadmeEnabled","gitIgnore","gitLicense","importFrom","vcsType"],[],[]
      @coding.depot.initDepot user,project,params,(data) =>
        @showData data


module.exports = (cmd) -> new Depots cmd