
# Generated by gitai 0.1.2

BaseModel = require '../BaseModel'

class Historys extends BaseModel
  init:=>
    @debug "init()"

    @program.command "get"
      .description "获取代码的历史"
      .arguments "<user> <project> <commits>"
      .action @get



  ###

   method            : get
   summary         : get
   description    : 获取代码的历史
   header         : userAgent,accept
   path            : user,project,commits
   query            : page,pageSize
   body            : currentApp,ref,path

  ###

  get: (user,project,commits) =>
    @debug "Historys::get()"

    @prompt.get [{"name":"userAgent","description":"Enter userAgent","type":"string","required":false},{"name":"accept","description":"Enter accept","type":"string","required":false},{"name":"page","description":"Enter page","type":"integer","required":false},{"name":"pageSize","description":"Enter pageSize","type":"integer","required":false},{"name":"currentApp","description":"Enter currentApp","type":"string","required":false},{"name":"ref","description":"Enter ref","type":"string","required":false},{"name":"path","description":"Enter path","type":"string","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,["userAgent","accept"],["page","pageSize"],["currentApp","ref","path"],[]
      @coding.history.get user,project,commits,params,(data) =>
        @showData data


module.exports = (cmd) -> new Historys cmd