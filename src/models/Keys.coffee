
# Generated by gitai 0.1.2

BaseModel = require '../BaseModel'

class Keys extends BaseModel
  init:=>
    @debug "init()"

    @program.command "get"
      .description "通过KeyId获取个人公钥"
      .arguments "<user> <keyId>"
      .action @get

    @program.command "key"
      .description "删除个人公钥"
      .arguments "<user> <keyId>"
      .action @key

    @program.command "list"
      .description "列出个人公钥"
      .arguments "<user>"
      .action @list

    @program.command "create"
      .description "创建个人公钥"
      .arguments "<user>"
      .action @create

    @program.command "webhook"
      .description "绑定部署公钥"
      .arguments "<user> <project> <id>"
      .action @webhook

    @program.command "webhook"
      .description "新建部署公钥"
      .arguments "<user> <project>"
      .action @webhook

    @program.command "list"
      .description "列出部署公钥"
      .arguments "<user> <project>"
      .action @list

    @program.command "webhook"
      .description "解绑部署公钥"
      .arguments "<user> <project> <id>"
      .action @webhook



  ###

   method            : get
   summary         : get
   description    : 通过KeyId获取个人公钥
   path            : user,keyId

  ###

  get: (user,keyId) =>
    @debug "Keys::get()"

    @coding.key.get user,keyId,(data) =>
      @showData data

  ###

   method            : delete
   summary         : key
   description    : 删除个人公钥
   path            : user,keyId

  ###

  key: (user,keyId) =>
    @debug "Keys::key()"

    @coding.key.key user,keyId,(data) =>
      @showData data

  ###

   method            : get
   summary         : list
   description    : 列出个人公钥
   path            : user
   query            : withIDEKey

  ###

  list: (user) =>
    @debug "Keys::list()"

    @prompt.get [{"name":"withIDEKey","description":"Enter withIDEKey","type":"boolean","required":false}],(err,params)=>
      if err
        return err
      @coding.key.list user,params, (data) =>
        @showData data

  ###

   method            : post
   summary         : create
   description    : 创建个人公钥
   path            : user
   query            : title,content

  ###

  create: (user) =>
    @debug "Keys::create()"

    @prompt.get [{"name":"title","description":"Enter title","type":"string","required":false},{"name":"content","description":"Enter content","type":"string","required":false}],(err,params)=>
      if err
        return err
      @coding.key.create user,params, (data) =>
        @showData data

  ###

   method            : post
   summary         : webhook
   description    : 绑定部署公钥
   path            : user,project,id

  ###

  webhook: (user,project,id) =>
    @debug "Keys::webhook()"

    @coding.key.webhook user,project,id,(data) =>
      @showData data

  ###

   method            : post
   summary         : webhook
   description    : 新建部署公钥
   path            : user,project
   query            : title,content

  ###

  webhook: (user,project) =>
    @debug "Keys::webhook()"

    @prompt.get [{"name":"title","description":"Enter title","type":"string","required":false},{"name":"content","description":"Enter content","type":"string","required":false}],(err,params)=>
      if err
        return err
      @coding.key.webhook user,project,params, (data) =>
        @showData data

  ###

   method            : get
   summary         : list
   description    : 列出部署公钥
   path            : user,project

  ###

  list: (user,project) =>
    @debug "Keys::list()"

    @coding.key.list user,project,(data) =>
      @showData data

  ###

   method            : post
   summary         : webhook
   description    : 解绑部署公钥
   path            : user,project,id

  ###

  webhook: (user,project,id) =>
    @debug "Keys::webhook()"

    @coding.key.webhook user,project,id,(data) =>
      @showData data


module.exports = (cmd) -> new Keys cmd