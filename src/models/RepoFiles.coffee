
# Generated by gitai 0.1.2

BaseModel = require '../BaseModel'

class RepoFiles extends BaseModel
  init:=>
    @debug "init()"

    @program.command "del"
      .description "删除文件"
      .arguments "<user> <project> <file>"
      .action @del

    @program.command "update"
      .description "更新文件"
      .arguments "<user> <project> <file>"
      .action @update

    @program.command "create"
      .description "新建文件"
      .arguments "<user> <project> <file>"
      .action @create



  ###

   method            : get
   summary         : del
   description    : 删除文件
   path            : user,project,file
   body            : ref,path

  ###

  del: (user,project,file) =>
    @debug "RepoFiles::del()"

    @prompt.get [{"name":"ref","description":"Enter ref","type":"string","required":false},{"name":"path","description":"Enter path","type":"string","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],[],["ref","path"],[]
      @coding.repoFile.del user,project,file,params,(data) =>
        @showData data

  ###

   method            : get
   summary         : update
   description    : 更新文件
   path            : user,project,file
   body            : ref,path

  ###

  update: (user,project,file) =>
    @debug "RepoFiles::update()"

    @prompt.get [{"name":"ref","description":"Enter ref","type":"string","required":false},{"name":"path","description":"Enter path","type":"string","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],[],["ref","path"],[]
      @coding.repoFile.update user,project,file,params,(data) =>
        @showData data

  ###

   method            : get
   summary         : create
   description    : 新建文件
   path            : user,project,file
   body            : ref,path

  ###

  create: (user,project,file) =>
    @debug "RepoFiles::create()"

    @prompt.get [{"name":"ref","description":"Enter ref","type":"string","required":false},{"name":"path","description":"Enter path","type":"string","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],[],["ref","path"],[]
      @coding.repoFile.create user,project,file,params,(data) =>
        @showData data


module.exports = (cmd) -> new RepoFiles cmd