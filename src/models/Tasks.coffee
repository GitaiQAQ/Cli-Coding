
# Generated by gitai 0.1.2

BaseModel = require '../BaseModel'

class Tasks extends BaseModel
  init:=>
    @debug "init()"

    @program.command "create"
      .description "创建任务"
      .arguments "<project>"
      .action @create

    @program.command "create"
      .description "创建任务"
      .arguments "<project> <id>"
      .action @create

    @program.command "del"
      .description "删除任务"
      .arguments "<project> <id>"
      .action @del

    @program.command "list"
      .description "列出某人的任务列表"
      .arguments "<project> <owner> <status>"
      .action @list

    @program.command "create"
      .description "全局任务创建"
      .action @create

    @program.command "count"
      .description "任务统计信息"
      .arguments "<user> <project>"
      .action @count

    @program.command "update"
      .description "修改任务"
      .arguments "<user> <project> <id>"
      .action @update

    @program.command "createComment"
      .description "创建任务评论"
      .arguments "<user> <project> <id>"
      .action @createComment

    @program.command "createComment"
      .description "删除任务评论"
      .arguments "<user> <project> <id> <commentId>"
      .action @createComment

    @program.command "comment"
      .description "获取任务评论"
      .arguments "<user> <project> <id>"
      .action @comment

    @program.command "update"
      .description "修改任务内容"
      .arguments "<user> <project> <id>"
      .action @update

    @program.command "update"
      .description "修改任务截止日期"
      .arguments "<user> <project> <id>"
      .action @update

    @program.command "watch"
      .description "获取任务描述"
      .arguments "<user> <project> <id>"
      .action @watch

    @program.command "update"
      .description "修改任务描述"
      .arguments "<user> <project> <id>"
      .action @update

    @program.command "label"
      .description "添加任务标签"
      .arguments "<user> <project> <id> <labelId>"
      .action @label

    @program.command "watch"
      .description "删除任务标签"
      .arguments "<user> <project> <id> <labelId>"
      .action @watch

    @program.command "watch"
      .description "批量操作任务标签"
      .arguments "<user> <project> <id>"
      .action @watch

    @program.command "update"
      .description "修改任务执行者"
      .arguments "<user> <project> <id>"
      .action @update

    @program.command "update"
      .description "修改任务优先级"
      .arguments "<user> <project> <id>"
      .action @update

    @program.command "update"
      .description "修改任务状态"
      .arguments "<user> <project> <id>"
      .action @update

    @program.command "watch"
      .description "关注任务"
      .arguments "<user> <project> <id>"
      .action @watch

    @program.command "watch"
      .description "取消任务关注"
      .arguments "<user> <project> <id>"
      .action @watch

    @program.command "getTaskListByLabel"
      .description "关注该任务的用户"
      .arguments "<user> <project> <id>"
      .action @getTaskListByLabel

    @program.command "count"
      .description " 获取当前用户项目的已完成、正在进行的、关注的数值"
      .arguments "<user> <project>"
      .action @count

    @program.command "count"
      .description "统计所有 已完成 和 正在处理 的任务数"
      .arguments "<user> <project>"
      .action @count

    @program.command "getTaskListByLabel"
      .description "查询标签下的任务列表"
      .arguments "<user> <project> <id>"
      .action @getTaskListByLabel

    @program.command "count"
      .description "列出当前用户某项目某状态的任务列表"
      .arguments "<user> <project> <status>"
      .action @count

    @program.command "list"
      .description "任务列表"
      .arguments "<user> <project> <status>"
      .action @list

    @program.command "count"
      .description "当前用户某状态的任务列表"
      .arguments "<user> <status>"
      .action @count



  ###

   method            : post
   summary         : create
   description    : 创建任务
   path            : project
   query            : owner_id,priority,deadline,description,content,labels,watchers

  ###

  create: (project) =>
    @debug "Tasks::create()"

    @prompt.get [{"name":"owner_id","description":"Enter owner_id","type":"string","required":false},{"name":"priority","description":"Enter priority","type":"integer","required":false},{"name":"deadline","description":"Enter deadline","type":"string","required":false},{"name":"description","description":"Enter description","type":"string","required":false},{"name":"content","description":"Enter content","type":"string","required":false},{"name":"labels","description":"Enter labels","type":"string","required":false},{"name":"watchers","description":"Enter watchers","type":"string","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["owner_id","priority","deadline","description","content","labels","watchers"],[],[]
      @coding.task.create project,params,(data) =>
        @showData data

  ###

   method            : get
   summary         : create
   description    : 创建任务
   path            : project,id
   query            : parseDescription

  ###

  create: (project,id) =>
    @debug "Tasks::create()"

    @prompt.get [{"name":"parseDescription","description":"Enter parseDescription","type":"boolean","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["parseDescription"],[],[]
      @coding.task.create project,id,params,(data) =>
        @showData data

  ###

   method            : delete
   summary         : del
   description    : 删除任务
   path            : project,id

  ###

  del: (project,id) =>
    @debug "Tasks::del()"

    @coding.task.del project,id,(data) =>
      @showData data

  ###

   method            : get
   summary         : list
   description    : 列出某人的任务列表
   path            : project,owner,status
   query            : page,pageSize
   body            : key

  ###

  list: (project,owner,status) =>
    @debug "Tasks::list()"

    @prompt.get [{"name":"page","description":"Enter page","type":"integer","required":false},{"name":"pageSize","description":"Enter pageSize","type":"integer","required":false},{"name":"key","description":"Enter key","type":"string","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["page","pageSize"],["key"],[]
      @coding.task.list project,owner,status,params,(data) =>
        @showData data

  ###

   method            : get
   summary         : create
   description    : 全局任务创建

  ###

  create: () =>
    @debug "Tasks::create()"

    @coding.task.create (data) =>
      @showData data

  ###

   method            : get
   summary         : count
   description    : 任务统计信息
   path            : user,project

  ###

  count: (user,project) =>
    @debug "Tasks::count()"

    @coding.task.count user,project,(data) =>
      @showData data

  ###

   method            : put
   summary         : update
   description    : 修改任务
   path            : user,project,id
   query            : status,priority,id,owner_id,deadline,description,content

  ###

  update: (user,project,id) =>
    @debug "Tasks::update()"

    @prompt.get [{"name":"status","description":"Enter status","type":"integer","required":false},{"name":"priority","description":"Enter priority","type":"integer","required":false},{"name":"id","description":"Enter id","type":"integer","required":false},{"name":"owner_id","description":"Enter owner_id","type":"integer","required":false},{"name":"deadline","description":"Enter deadline","type":"string","required":false},{"name":"description","description":"Enter description","type":"string","required":false},{"name":"content","description":"Enter content","type":"string","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["status","priority","id","owner_id","deadline","description","content"],[],[]
      @coding.task.update user,project,id,params,(data) =>
        @showData data

  ###

   method            : post
   summary         : createComment
   description    : 创建任务评论
   path            : user,project,id
   body            : content

  ###

  createComment: (user,project,id) =>
    @debug "Tasks::createComment()"

    @prompt.get [{"name":"content","description":"Enter content","type":"string","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],[],["content"],[]
      @coding.task.createComment user,project,id,params,(data) =>
        @showData data

  ###

   method            : delete
   summary         : createComment
   description    : 删除任务评论
   path            : user,project,id,commentId

  ###

  createComment: (user,project,id,commentId) =>
    @debug "Tasks::createComment()"

    @coding.task.createComment user,project,id,commentId,(data) =>
      @showData data

  ###

   method            : get
   summary         : comment
   description    : 获取任务评论
   path            : user,project,id
   query            : page,pageSize

  ###

  comment: (user,project,id) =>
    @debug "Tasks::comment()"

    @prompt.get [{"name":"page","description":"Enter page","type":"integer","required":false},{"name":"pageSize","description":"Enter pageSize","type":"integer","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["page","pageSize"],[],[]
      @coding.task.comment user,project,id,params,(data) =>
        @showData data

  ###

   method            : put
   summary         : update
   description    : 修改任务内容
   path            : user,project,id
   query            : content,id

  ###

  update: (user,project,id) =>
    @debug "Tasks::update()"

    @prompt.get [{"name":"content","description":"Enter content","type":"string","required":false},{"name":"id","description":"Enter id","type":"integer","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["content","id"],[],[]
      @coding.task.update user,project,id,params,(data) =>
        @showData data

  ###

   method            : put
   summary         : update
   description    : 修改任务截止日期
   path            : user,project,id
   query            : deadline,id

  ###

  update: (user,project,id) =>
    @debug "Tasks::update()"

    @prompt.get [{"name":"deadline","description":"Enter deadline","type":"string","required":false},{"name":"id","description":"Enter id","type":"integer","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["deadline","id"],[],[]
      @coding.task.update user,project,id,params,(data) =>
        @showData data

  ###

   method            : get
   summary         : watch
   description    : 获取任务描述
   path            : user,project,id

  ###

  watch: (user,project,id) =>
    @debug "Tasks::watch()"

    @coding.task.watch user,project,id,(data) =>
      @showData data

  ###

   method            : put
   summary         : update
   description    : 修改任务描述
   path            : user,project,id
   query            : description,id

  ###

  update: (user,project,id) =>
    @debug "Tasks::update()"

    @prompt.get [{"name":"description","description":"Enter description","type":"string","required":false},{"name":"id","description":"Enter id","type":"integer","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["description","id"],[],[]
      @coding.task.update user,project,id,params,(data) =>
        @showData data

  ###

   method            : post
   summary         : label
   description    : 添加任务标签
   path            : user,project,id,labelId

  ###

  label: (user,project,id,labelId) =>
    @debug "Tasks::label()"

    @coding.task.label user,project,id,labelId,(data) =>
      @showData data

  ###

   method            : delete
   summary         : watch
   description    : 删除任务标签
   path            : user,project,id,labelId

  ###

  watch: (user,project,id,labelId) =>
    @debug "Tasks::watch()"

    @coding.task.watch user,project,id,labelId,(data) =>
      @showData data

  ###

   method            : post
   summary         : watch
   description    : 批量操作任务标签
   path            : user,project,id
   query            : labelIdStrs

  ###

  watch: (user,project,id) =>
    @debug "Tasks::watch()"

    @prompt.get [{"name":"labelIdStrs","description":"Enter labelIdStrs","type":"string","required":true}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["labelIdStrs"],[],[]
      @coding.task.watch user,project,id,params,(data) =>
        @showData data

  ###

   method            : put
   summary         : update
   description    : 修改任务执行者
   path            : user,project,id
   query            : owner_id,id

  ###

  update: (user,project,id) =>
    @debug "Tasks::update()"

    @prompt.get [{"name":"owner_id","description":"Enter owner_id","type":"integer","required":false},{"name":"id","description":"Enter id","type":"integer","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["owner_id","id"],[],[]
      @coding.task.update user,project,id,params,(data) =>
        @showData data

  ###

   method            : put
   summary         : update
   description    : 修改任务优先级
   path            : user,project,id
   query            : priority,id

  ###

  update: (user,project,id) =>
    @debug "Tasks::update()"

    @prompt.get [{"name":"priority","description":"Enter priority","type":"integer","required":false},{"name":"id","description":"Enter id","type":"integer","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["priority","id"],[],[]
      @coding.task.update user,project,id,params,(data) =>
        @showData data

  ###

   method            : put
   summary         : update
   description    : 修改任务状态
   path            : user,project,id
   query            : status,id

  ###

  update: (user,project,id) =>
    @debug "Tasks::update()"

    @prompt.get [{"name":"status","description":"Enter status","type":"integer","required":false},{"name":"id","description":"Enter id","type":"integer","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["status","id"],[],[]
      @coding.task.update user,project,id,params,(data) =>
        @showData data

  ###

   method            : post
   summary         : watch
   description    : 关注任务
   path            : user,project,id

  ###

  watch: (user,project,id) =>
    @debug "Tasks::watch()"

    @coding.task.watch user,project,id,(data) =>
      @showData data

  ###

   method            : delete
   summary         : watch
   description    : 取消任务关注
   path            : user,project,id

  ###

  watch: (user,project,id) =>
    @debug "Tasks::watch()"

    @coding.task.watch user,project,id,(data) =>
      @showData data

  ###

   method            : get
   summary         : getTaskListByLabel
   description    : 关注该任务的用户
   path            : user,project,id
   query            : page,pageSize

  ###

  getTaskListByLabel: (user,project,id) =>
    @debug "Tasks::getTaskListByLabel()"

    @prompt.get [{"name":"page","description":"Enter page","type":"integer","required":false},{"name":"pageSize","description":"Enter pageSize","type":"integer","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["page","pageSize"],[],[]
      @coding.task.getTaskListByLabel user,project,id,params,(data) =>
        @showData data

  ###

   method            : get
   summary         : count
   description    :  获取当前用户项目的已完成、正在进行的、关注的数值
   path            : user,project

  ###

  count: (user,project) =>
    @debug "Tasks::count()"

    @coding.task.count user,project,(data) =>
      @showData data

  ###

   method            : get
   summary         : count
   description    : 统计所有 已完成 和 正在处理 的任务数
   path            : user,project

  ###

  count: (user,project) =>
    @debug "Tasks::count()"

    @coding.task.count user,project,(data) =>
      @showData data

  ###

   method            : get
   summary         : getTaskListByLabel
   description    : 查询标签下的任务列表
   path            : user,project,id
   query            : page,pageSize
   body            : user

  ###

  getTaskListByLabel: (user,project,id) =>
    @debug "Tasks::getTaskListByLabel()"

    @prompt.get [{"name":"page","description":"Enter page","type":"integer","required":false},{"name":"pageSize","description":"Enter pageSize","type":"integer","required":false},{"name":"user","description":"Enter user","type":"string","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["page","pageSize"],["user"],[]
      @coding.task.getTaskListByLabel user,project,id,params,(data) =>
        @showData data

  ###

   method            : get
   summary         : count
   description    : 列出当前用户某项目某状态的任务列表
   path            : user,project,status
   query            : page,pageSize

  ###

  count: (user,project,status) =>
    @debug "Tasks::count()"

    @prompt.get [{"name":"page","description":"Enter page","type":"integer","required":false},{"name":"pageSize","description":"Enter pageSize","type":"integer","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["page","pageSize"],[],[]
      @coding.task.count user,project,status,params,(data) =>
        @showData data

  ###

   method            : get
   summary         : list
   description    : 任务列表
   path            : user,project,status
   query            : page,pageSize
   body            : key

  ###

  list: (user,project,status) =>
    @debug "Tasks::list()"

    @prompt.get [{"name":"page","description":"Enter page","type":"integer","required":false},{"name":"pageSize","description":"Enter pageSize","type":"integer","required":false},{"name":"key","description":"Enter key","type":"string","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["page","pageSize"],["key"],[]
      @coding.task.list user,project,status,params,(data) =>
        @showData data

  ###

   method            : get
   summary         : count
   description    : 当前用户某状态的任务列表
   path            : user,status
   query            : page,pageSize

  ###

  count: (user,status) =>
    @debug "Tasks::count()"

    @prompt.get [{"name":"page","description":"Enter page","type":"integer","required":false},{"name":"pageSize","description":"Enter pageSize","type":"integer","required":false}],(err,params)=>
      if err
        return err
      params = @parseParames params,[],["page","pageSize"],[],[]
      @coding.task.count user,status,params,(data) =>
        @showData data


module.exports = (cmd) -> new Tasks cmd